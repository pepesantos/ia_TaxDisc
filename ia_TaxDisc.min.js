
function ia_TaxDisc(perDflt,decs,markup,decsPer){"use strict";decsPer=isNotNum(decsPer)||decsPer<0?4:Number(decsPer);try{if(isNotNum(perDflt)&&perDflt.charAt(perDflt.length-1)==='%')
perDflt=parseFloat(perDflt.substr(0,perDflt.length-1))/100.00;}catch(er){}
perDflt=isNotNum(perDflt)?0.16:Number(perDflt);decs=isNotNum(decs)||decs<0?2:parseInt(decs);if(isNotNum(markup))
markup=1;else if(markup===true||markup>0)
markup=1;else
markup=-1;var me=this;function round(n){return decs<0?n:Number(Math.round(n+'e'+decs)+'e-'+decs);}
function roundPer(n){return decsPer<0?n:Number(Math.round(n+'e'+decsPer)+'e-'+decsPer);}
function isNotNum(n){return n===""||n===null||isNaN(n);}
function perSet(per){try{if(isNotNum(per)&&per.charAt(per.length-1)==='%')
per=parseFloat(per.substr(0,per.length-1))/100.00;}catch(er){}
return isNotNum(per)?perDflt:Number(per);}
me.breakdown=function(before,per){if(before!==null&&typeof before==='object'){per=perSet(before.per);before=before.before;}else{before=round(before);per=perSet(per);}
return{before:before,per:per,value:round(before*per),after:round(before*(1.00+markup*per))};};me.deduce=function(before,value,after,per){if(before!==null&&typeof before==='object'){value=before.value;after=before.after;per=perSet(before.per);before=before.before;}else
per=perSet(per);if(!isNotNum(value)){if(isNotNum(before)&&isNotNum(after)){return me.breakdown(round(round(value)/per),per);}
if(isNotNum(before)&&!isNotNum(after)){after=round(after);value=round(value);before=markup>0?round(after-value):round(after+value);return{before:before,per:perSet(value/before),value:value,after:after};}
if(!isNotNum(before)&&isNotNum(after)){before=round(before);value=round(value);return{before:before,per:perSet(value/before),value:value,after:round(before+markup*value)};}
return{before:round(before),per:per,value:round(value),after:round(after)};}
if(!isNotNum(before)&&isNotNum(after)){return me.breakdown(before,per);}
if(isNotNum(before)&&!isNotNum(after)){return me.breakdown(round(round(after)/(1.00+markup*per)),per);}
if(!isNotNum(before)&&!isNotNum(after)){before=round(before);after=round(after);value=markup>0?round(after-before):round(before-after);return{before:before,per:perSet(roundPer(value/before)),value:value,after:after};}
return{before:before,per:perDflt,value:value,after:after};};}